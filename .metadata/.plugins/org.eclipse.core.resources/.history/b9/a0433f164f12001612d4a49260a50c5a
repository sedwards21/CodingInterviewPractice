import java.util.Arrays;

public class SmallestDistance {
	
	
	 public int solution(int[] A, int X) {
	        int N = A.length;
	        if (N == 0) {
	            return -1;
	        }
	        int l = 0;
	        int r = N - 1;
	        while (l < r) {
		        if (A[l] == X) {
		            return l;
		        }
		        
	            int m = (l + r) / 2;
	            if (A[m] > X) {
	                r = m - 1;
	            } else {
	                l = m;
	            }
	        }

	        return -1;
	    }
	
	public int solution(int[] A){
		Arrays.sort(A);
		System.out.println("Full array" + Arrays.toString(A));
		int smallest = Integer.MAX_VALUE;
		int calculation = 0;
		for(int i=0; i<A.length; i++){
			if(i >= A.length-1){
				break;
			}else{
				calculation = A[i+1] -  A[i];
				System.out.println(A[i+1] + "-" + A[i] + " = " + calculation);
				System.out.println("Smallest = " + smallest);
				if(smallest > calculation){
					System.out.println("New smallest = " + calculation);
					smallest = calculation;
				}
			}
		}
		return smallest;
	}
	public static void main(String[] args) {
		SmallestDistance sd = new SmallestDistance();
		int[] ar = {1, 2, 5, 9, 10};
		System.out.println(  sd.solution( ar, 5) );
	}
}
